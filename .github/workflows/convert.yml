name: convert

on:
  issue_comment:
    types: [created, edited, deleted]
  issues:
    types: [opened, edited, deleted, transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]

env:
  TZ: Asia/Shanghai

# dynamic matrix
# https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.convert.outputs.result }}
    steps:
      - name: debug
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event.action: ${{ github.event.action }}"
          echo "github.actor: ${{ github.actor }}"
          echo "github.repository_owner: ${{ github.repository_owner }}"
          # cat "$GITHUB_EVENT_PATH"

      # TODO 更安全的鉴权
      - name: check
        if: ${{ github.actor != github.repository_owner }}
        run: |
          exit 1

      - name: prepare script file
        run: |
          wget https://github.com/hellodword/issue-notes-ts/raw/release/index.js
      - name: convert
        id: convert
        uses: actions/github-script@main
        with:
          result-encoding: string
          script: |
            const script = require('./index.js');
            const result = await script.convertEntry({github, context, core})
            if (result && result.archive && result.archive.length > 0){
              console.log('result.archive', result.archive)
              return JSON.stringify({archive: result.archive})
            }
            return ''

      - name: debug
        if: ${{ steps.convert.outputs.result != '' }}
        run: |
          echo '${{steps.convert.outputs.result}}'

  job2:
    needs: job1
    if: ${{ needs.job1.outputs.matrix != '' && needs.job1.outputs.matrix != '[]' && needs.job1.outputs.matrix != 'undefined' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
      - name: debug
        run: |
          echo "${{ matrix.archive }}"
          echo "${{ matrix.archive.link }}"
          echo "${{ toJSON(matrix.archive) }}"
      - name: debug
        uses: actions/github-script@main
        with:
          script: |
            const archive = ${{ toJSON(matrix.archive) }}
            console.log(1, archive)
            console.log(2, "${{ matrix.archive.link }}")
            console.log(3, ${{ toJSON(matrix.archive.engine) }})

      - name: prepare script file
        run: |
          wget https://github.com/hellodword/issue-notes-ts/raw/release/index.js

      # archivebox
      - name: archivebox process
        if: ${{ contains(matrix.archive.engine, 'archivebox') || contains(matrix.archive.engine, 'all') }}
        run: |
          mkdir -p archives/archivebox
          cd archives/archivebox
          docker run --rm -i -v `pwd`:/data archivebox/archivebox init
          # https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#timeout
          docker run --rm -i -v `pwd`:/data archivebox/archivebox config --set TIMEOUT=1200
          docker run --rm -i -v `pwd`:/data archivebox/archivebox add "${{ matrix.archive.link }}"
          sudo find . -name singlefile.html
          sudo chown -R $(find ../../main -printf '%u:%g\n' | uniq) ./archive
          sudo mv ./archive/*/singlefile.html temp.html
          sudo mv temp.html index.html
      - name: archivebox commit
        if: ${{ contains(matrix.archive.engine, 'archivebox') || contains(matrix.archive.engine, 'all') }}
        uses: actions/github-script@main
        with:
          script: |
            const script = require('./index.js')
            const archive = ${{ toJSON(matrix.archive) }}
            return await script.archiveEntry({
              context: context,
              github: github,
              engine: "archivebox",
              filename: archive.filename,
              link: archive.link
            })

      # 对微信公众号效果比目前的 archivebox 好，但是对别的 bug 就多
      - name: cairn process
        if: ${{ contains(matrix.archive.engine, 'cairn') || contains(matrix.archive.engine, 'all') }}
        run: |
          mkdir -p archives/cairn
          cd archives/cairn
          sudo npm install -g @wabarc/cairn
          cairn -o . -t 1200 "${{ matrix.archive.link }}"
          ls -alh
          sudo mv *.html temp.html
          sudo mv temp.html index.html
      - name: cairn commit
        if: ${{ contains(matrix.archive.engine, 'cairn') || contains(matrix.archive.engine, 'all') }}
        uses: actions/github-script@main
        with:
          script: |
            const script = require('./index.js')
            const archive = ${{ toJSON(matrix.archive) }}
            return await script.archiveEntry({
              context: context,
              github: github,
              engine: "cairn",
              filename: archive.filename,
              link: archive.link
            })

      # obelisk 年久失修，rivet 这个 fork 不错
      - name: obelisk prepare      
        uses: actions/setup-go@v2
        if: ${{ contains(matrix.archive.engine, 'obelisk') || contains(matrix.archive.engine, 'all') }}
        with:
          go-version: '1.17.6'
      - name: obelisk process
        if: ${{ contains(matrix.archive.engine, 'obelisk') || contains(matrix.archive.engine, 'all') }}
        run: |
          mkdir -p archives/obelisk
          cd archives/obelisk
          go install github.com/go-shiori/obelisk/cmd/obelisk@master
          obelisk "${{ matrix.archive.link }}"
          ls -alh
          for f in *.htm; do 
              mv -- "$f" "${f%.htm}.html"
          done
          ls -alh
          sudo mv *.html temp.html
          sudo mv temp.html index.html
      - name: obelisk commit
        if: ${{ contains(matrix.archive.engine, 'obelisk') || contains(matrix.archive.engine, 'all') }}
        uses: actions/github-script@main
        with:
          script: |
            const script = require('./index.js')
            const archive = ${{ toJSON(matrix.archive) }}
            return await script.archiveEntry({
              context: context,
              github: github,
              engine: "obelisk",
              filename: archive.filename,
              link: archive.link
            })

      # rivet
      - name: rivet prepare
        uses: actions/setup-go@v2
        if: ${{ contains(matrix.archive.engine, 'rivet') || contains(matrix.archive.engine, 'all') }}
        with:
          go-version: '1.17.6'
      - name: rivet process
        if: ${{ contains(matrix.archive.engine, 'rivet') || contains(matrix.archive.engine, 'all') }}
        run: |
          mkdir -p archives/rivet
          cd archives/rivet
          
          go install github.com/wabarc/rivet/cmd/rivet@main
          # git clone --depth 1 -b patch-4 https://github.com/hellodword/rivet source
          # (cd source && go build -o ../rivet_bin ./cmd/rivet)
          # sudo mv rivet_bin /usr/bin/rivet

          rivet -m archive "${{ matrix.archive.link }}"
          ls -alh
          sudo mv *.html temp.html
          sudo mv temp.html index.html
      - name: rivet commit
        if: ${{ contains(matrix.archive.engine, 'rivet') || contains(matrix.archive.engine, 'all') }}
        uses: actions/github-script@main
        with:
          script: |
            const script = require('./index.js')
            const archive = ${{ toJSON(matrix.archive) }}
            return await script.archiveEntry({
              context: context,
              github: github,
              engine: "rivet",
              filename: archive.filename,
              link: archive.link
            })