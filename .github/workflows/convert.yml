name: convert

on:
  issue_comment:
    types: [created, edited, deleted]
  issues:
    types: [opened, edited, deleted, transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: debug
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event.action: ${{ github.event.action }}"
          echo "github.actor: ${{ github.actor }}"
          echo "github.repository_owner: ${{ github.repository_owner }}"
          cat "$GITHUB_EVENT_PATH"
      - name: check
        if: ${{ github.actor != github.repository_owner }}
        run: |
          exit 1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 'main'
          path: 'main'

      - name: convert.js
        id: convert
        uses: actions/github-script@v5
        with:
          script: |
            const script = require('./main/convert-module/dist/index.js');
            return await script.convertEntry({github, context, core})

      - name: debug
        if: ${{ steps.convert.outputs.result != '' }}
        run: |
          echo "${{steps.convert.outputs.result}}"
      - name: archive link
        if: ${{ steps.convert.outputs.result != '' }}
        id: archive_link
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const archive = ${{ steps.convert.outputs.result }}
            return archive.link || ''

      - name: archive title
        if: ${{ steps.archive_link.outputs.result != '' }}
        id: archive_title
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const archive = ${{ steps.convert.outputs.result }}
            return archive.title || ''

      - name: archive engine
        if: ${{ steps.archive_link.outputs.result != '' && steps.archive_title.outputs.result != '' }}
        id: archive_engine
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const archive = ${{ steps.convert.outputs.result }}
            return archive.engine ? archive.engine.join(',') : 'archivebox'

      - name: archive author
        if: ${{ steps.archive_link.outputs.result != '' && steps.archive_title.outputs.result != '' }}
        id: archive_author
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const archive = ${{ steps.convert.outputs.result }}
            return archive.author

      # archivebox
      - name: archivebox
        if: ${{ contains(steps.archive_engine.outputs.result, 'archivebox') }}
        run: |
          mkdir -p archive/archivebox
          cd archive/archivebox
          docker run --rm -i -v `pwd`:/data archivebox/archivebox init
          # https://github.com/ArchiveBox/ArchiveBox/wiki/Configuration#timeout
          docker run --rm -i -v `pwd`:/data archivebox/archivebox config --set TIMEOUT=1200
          docker run --rm -i -v `pwd`:/data archivebox/archivebox add "${{ steps.archive_link.outputs.result }}"
          sudo find . -name singlefile.html
          sudo chown -R $(find ../main -printf '%u:%g\n' | uniq) ./archive
          sudo mv ./archive/*/singlefile.html temp.html
          sudo mv temp.html index.html

      # 对微信公众号效果比目前的 archivebox 好，但是对别的 bug 就多
      - name: cairn
        if: ${{ contains(steps.archive_engine.outputs.result, 'cairn') }}
        run: |
          mkdir -p archive/cairn
          cd archive/cairn
          sudo npm install -g @wabarc/cairn
          cairn -o . -t 1200 "${{ steps.archive_link.outputs.result }}"
          ls -alh
          sudo mv *.html temp.html
          sudo mv temp.html index.html

      # obelisk 年久失修，rivet 这个 fork 不错
      - uses: actions/setup-go@v2
        if: ${{ contains(steps.archive_engine.outputs.result, 'obelisk') }}
        with:
          go-version: '1.17.6'
      - name: obelisk
        if: ${{ contains(steps.archive_engine.outputs.result, 'obelisk') }}
        run: |
          mkdir -p archive/obelisk
          cd archive/obelisk
          go install github.com/go-shiori/obelisk/cmd/obelisk
          obelisk "${{ steps.archive_link.outputs.result }}"
          ls -alh
          for f in *.htm; do 
              mv -- "$f" "${f%.htm}.html"
          done
          ls -alh
          sudo mv *.html temp.html
          sudo mv temp.html index.html

      # rivet
      - uses: actions/setup-go@v2
        if: ${{ contains(steps.archive_engine.outputs.result, 'rivet') }}
        with:
          go-version: '1.17.6'
      - name: rivet
        if: ${{ contains(steps.archive_engine.outputs.result, 'rivet') }}
        run: |
          mkdir -p archive/rivet
          cd archive/rivet
          # go install github.com/wabarc/rivet/cmd/rivet@main
          git clone --depth 1 -b patch-4 https://github.com/hellodword/rivet source
          (cd source && go build -o ../rivet_bin ./cmd/rivet)
          sudo mv rivet_bin /usr/bin/rivet

          rivet -m archive "${{ steps.archive_link.outputs.result }}"
          ls -alh
          sudo mv *.html temp.html
          sudo mv temp.html index.html

      - name: commit
        if: ${{ steps.archive_engine.outputs.result != '' }}
        uses: actions/github-script@v5
        with:
          script: |
            const script = require('./main/convert-module/dist/index.js')
            const archive = ${{ steps.convert.outputs.result }}
            return await script.archiveEntry({github, context, core, archive})
